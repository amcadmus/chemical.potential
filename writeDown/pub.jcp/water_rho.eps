%!PS-Adobe-2.0 EPSF-2.0
%%Title: rho1.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Tue Nov 26 09:20:56 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 290 220
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 290 50 lineto 290 220 lineto 50 220 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rho1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (animesh)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov 26 09:20:56 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4818.00 3400.00 BoxColFill} if
1.000 UL
LTb
880 512 M
63 0 V
3586 0 R
-63 0 V
stroke
784 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
880 680 M
31 0 V
3618 0 R
-31 0 V
880 849 M
63 0 V
3586 0 R
-63 0 V
stroke
784 849 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 750)]
] -53.3 MRshow
1.000 UL
LTb
880 1017 M
31 0 V
3618 0 R
-31 0 V
880 1186 M
63 0 V
3586 0 R
-63 0 V
stroke
784 1186 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 800)]
] -53.3 MRshow
1.000 UL
LTb
880 1354 M
31 0 V
3618 0 R
-31 0 V
880 1523 M
63 0 V
3586 0 R
-63 0 V
stroke
784 1523 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 850)]
] -53.3 MRshow
1.000 UL
LTb
880 1691 M
31 0 V
3618 0 R
-31 0 V
880 1859 M
63 0 V
3586 0 R
-63 0 V
stroke
784 1859 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 900)]
] -53.3 MRshow
1.000 UL
LTb
880 2028 M
31 0 V
3618 0 R
-31 0 V
880 2196 M
63 0 V
3586 0 R
-63 0 V
stroke
784 2196 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 950)]
] -53.3 MRshow
1.000 UL
LTb
880 2365 M
31 0 V
3618 0 R
-31 0 V
880 2533 M
63 0 V
3586 0 R
-63 0 V
stroke
784 2533 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1000)]
] -53.3 MRshow
1.000 UL
LTb
880 2702 M
31 0 V
3618 0 R
-31 0 V
880 2870 M
63 0 V
3586 0 R
-63 0 V
stroke
784 2870 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1050)]
] -53.3 MRshow
1.000 UL
LTb
880 3039 M
31 0 V
3618 0 R
-31 0 V
880 3207 M
63 0 V
3586 0 R
-63 0 V
stroke
784 3207 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1100)]
] -53.3 MRshow
1.000 UL
LTb
880 512 M
0 63 V
0 2632 R
0 -63 V
stroke
880 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.5)]
] -53.3 MCshow
1.000 UL
LTb
1015 512 M
0 31 V
0 2664 R
0 -31 V
1150 512 M
0 31 V
0 2664 R
0 -31 V
1285 512 M
0 31 V
0 2664 R
0 -31 V
1421 512 M
0 31 V
0 2664 R
0 -31 V
1556 512 M
0 63 V
0 2632 R
0 -63 V
stroke
1556 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
1.000 UL
LTb
1691 512 M
0 31 V
0 2664 R
0 -31 V
1826 512 M
0 31 V
0 2664 R
0 -31 V
1961 512 M
0 31 V
0 2664 R
0 -31 V
2096 512 M
0 31 V
0 2664 R
0 -31 V
2231 512 M
0 63 V
0 2632 R
0 -63 V
stroke
2231 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.5)]
] -53.3 MCshow
1.000 UL
LTb
2367 512 M
0 31 V
0 2664 R
0 -31 V
2502 512 M
0 31 V
0 2664 R
0 -31 V
2637 512 M
0 31 V
0 2664 R
0 -31 V
2772 512 M
0 31 V
0 2664 R
0 -31 V
2907 512 M
0 63 V
0 2632 R
0 -63 V
stroke
2907 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MCshow
1.000 UL
LTb
3042 512 M
0 31 V
0 2664 R
0 -31 V
3178 512 M
0 31 V
0 2664 R
0 -31 V
3313 512 M
0 31 V
0 2664 R
0 -31 V
3448 512 M
0 31 V
0 2664 R
0 -31 V
3583 512 M
0 63 V
0 2632 R
0 -63 V
stroke
3583 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2.5)]
] -53.3 MCshow
1.000 UL
LTb
3718 512 M
0 31 V
0 2664 R
0 -31 V
3853 512 M
0 31 V
0 2664 R
0 -31 V
3988 512 M
0 31 V
0 2664 R
0 -31 V
4124 512 M
0 31 V
0 2664 R
0 -31 V
4259 512 M
0 63 V
0 2632 R
0 -63 V
stroke
4259 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 3)]
] -53.3 MCshow
1.000 UL
LTb
4394 512 M
0 31 V
0 2664 R
0 -31 V
4529 512 M
0 31 V
0 2664 R
0 -31 V
stroke
880 3207 N
880 512 L
3649 0 V
0 2695 V
-3649 0 V
Z stroke
LCb setrgbcolor
128 1859 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 160.0 0.0 true true 0 (r)]
[(Helvetica) 160.0 0.0 true true 0 (\(x\) [ kg/m)]
[(Helvetica) 128.0 80.0 true true 0 (3)]
[(Helvetica) 160.0 0.0 true true 0 ( ])]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
2704 112 M
[ [(Helvetica) 160.0 0.0 true true 0 (x [nm])]
] -53.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
5.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
3794 815 M
[ [(Helvetica) 160.0 0.0 true true 0 (Full Atomistic Ref.)]
] -53.3 MRshow
LT2
LC2 setrgbcolor
3890 815 M
447 0 V
880 1733 M
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
37 0 V
36 0 V
37 0 V
37 0 V
37 0 V
% End plot #1
% Begin plot #2
stroke
LT0
LC0 setrgbcolor
LCb setrgbcolor
3794 655 M
[ [(Helvetica) 160.0 0.0 true true 0 (AdResS)]
] -53.3 MRshow
LT0
LC0 setrgbcolor
3890 655 M
447 0 V
880 1463 M
14 145 V
13 -52 V
14 168 V
13 -168 V
14 144 V
13 0 V
14 23 V
13 -6 V
14 53 V
13 -331 V
14 580 V
13 -365 V
14 72 V
13 -71 V
14 -4 V
13 29 V
14 41 V
13 -127 V
14 -1 V
13 23 V
14 59 V
13 154 V
14 -156 V
13 110 V
14 20 V
13 50 V
14 -84 V
13 113 V
14 -6 V
13 78 V
14 -8 V
13 -30 V
14 -361 V
14 606 V
13 -616 V
14 467 V
13 -195 V
14 -133 V
13 31 V
14 -44 V
13 -75 V
14 93 V
13 -87 V
14 198 V
13 -173 V
14 130 V
13 -36 V
14 31 V
13 21 V
14 25 V
13 -30 V
14 -24 V
13 117 V
14 -237 V
13 58 V
14 48 V
13 -18 V
14 33 V
13 -61 V
14 122 V
13 -4 V
14 24 V
13 -97 V
14 102 V
13 -63 V
14 -75 V
13 233 V
14 -145 V
14 105 V
13 -56 V
14 -29 V
13 135 V
14 -88 V
13 39 V
14 -135 V
13 -24 V
14 -86 V
13 53 V
14 32 V
13 -101 V
14 42 V
13 -41 V
14 87 V
13 -12 V
14 -70 V
13 118 V
14 -81 V
13 79 V
14 56 V
13 -24 V
14 -60 V
13 70 V
14 7 V
13 -7 V
14 -34 V
13 52 V
14 -26 V
13 11 V
14 22 V
13 -26 V
14 -7 V
14 -29 V
stroke 2259 1753 M
13 107 V
14 -172 V
13 126 V
14 -8 V
13 34 V
14 36 V
13 -124 V
14 -3 V
13 7 V
14 -83 V
13 -61 V
14 51 V
13 33 V
14 -55 V
13 89 V
14 -107 V
13 106 V
14 -27 V
13 153 V
14 -140 V
13 113 V
14 57 V
13 -122 V
14 145 V
13 -76 V
14 123 V
13 15 V
14 -44 V
13 -101 V
14 -26 V
13 17 V
14 0 V
13 -11 V
14 91 V
14 -181 V
13 141 V
14 -11 V
13 -192 V
14 10 V
13 15 V
14 -61 V
13 99 V
14 -123 V
13 101 V
14 49 V
13 -1 V
14 -92 V
13 130 V
14 -63 V
13 89 V
14 32 V
13 0 V
14 -102 V
13 3 V
14 40 V
13 -34 V
14 107 V
13 -91 V
14 99 V
13 -49 V
14 -70 V
13 52 V
14 22 V
13 -129 V
14 79 V
13 -26 V
14 10 V
14 -202 V
13 29 V
14 64 V
13 33 V
14 -36 V
13 59 V
14 -120 V
13 132 V
14 -28 V
13 -87 V
14 70 V
13 -23 V
14 -20 V
13 -2 V
14 7 V
13 -33 V
14 100 V
13 -36 V
14 -51 V
13 55 V
14 -2 V
13 -20 V
14 36 V
13 -100 V
14 106 V
13 48 V
14 41 V
13 4 V
14 -96 V
13 38 V
14 78 V
13 -197 V
14 45 V
14 122 V
13 41 V
14 -137 V
13 -52 V
stroke 3664 1615 M
14 192 V
13 -211 V
14 69 V
13 -24 V
14 -90 V
13 80 V
14 -22 V
13 12 V
14 -27 V
13 115 V
14 -104 V
13 25 V
14 3 V
13 33 V
14 -100 V
13 120 V
14 25 V
13 6 V
14 -51 V
13 -57 V
14 39 V
13 78 V
14 61 V
13 4 V
14 -86 V
13 9 V
14 27 V
13 -39 V
14 -37 V
13 -266 V
14 508 V
14 -140 V
13 -171 V
14 5 V
13 40 V
14 -121 V
13 17 V
14 92 V
13 7 V
14 -37 V
13 -4 V
14 23 V
13 -71 V
14 131 V
13 6 V
14 -23 V
13 95 V
14 -54 V
13 31 V
14 -4 V
13 105 V
14 -209 V
13 135 V
14 4 V
13 38 V
14 -8 V
13 -15 V
14 -71 V
13 35 V
14 345 V
13 -690 V
14 300 V
13 58 V
14 193 V
% End plot #2
stroke
1.000 UL
LTb
880 3207 N
880 512 L
3649 0 V
0 2695 V
-3649 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
